# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer
#+STARTUP: overview
#+STARTUP: indent
#+TAGS: noexport(n)
#+LANGUAGE: en

#+Title: Semi-Automatic Performance Optimization of HPC Kernels
#+AUTHOR:      Steven QUINITO MASNADA

#+EPRESENT_FRAME_LEVEL: 2

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [11pt,xcolor=dvipsnames,presentation]
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t

#+LATEX_HEADER: \usedescriptionitemofwidthas{bl}
#+LATEX_HEADER: \usepackage[T1]{fontenc}
#+LATEX_HEADER: \usepackage[utf8]{inputenc}
#+LATEX_HEADER: \usepackage[american]{babel}
#+LATEX_HEADER: \usepackage{ifthen,figlatex,amsmath,amstext,gensymb,amssymb}
#+LATEX_HEADER: \usepackage{boxedminipage,xspace,multicol}
#+LATEX_HEADER: %%%%%%%%% Begin of Beamer Layout %%%%%%%%%%%%%
#+LATEX_HEADER: \ProcessOptionsBeamer
#+latex_header: \mode<beamer>{\usetheme{Madrid}}
#+LATEX_HEADER: \usecolortheme{whale}
#+LATEX_HEADER: \usecolortheme[named=BrickRed]{structure}
# #+LATEX_HEADER: \useinnertheme{rounded}
#+LATEX_HEADER: \useoutertheme{infolines}
#+LATEX_HEADER: \setbeamertemplate{footline}[frame number]
#+LATEX_HEADER: \setbeamertemplate{headline}[default]
#+LATEX_HEADER: \setbeamertemplate{navigation symbols}{}
#+LATEX_HEADER: \defbeamertemplate*{headline}{info theme}{}
#+LATEX_HEADER: \defbeamertemplate*{footline}{info theme}{\leavevmode%
#+LATEX_HEADER:   \hbox{%
#+LATEX_HEADER:     \begin{beamercolorbox}[wd=.5\paperwidth,ht=2.25ex,dp=1ex,center]{author in head/foot}%
#+LATEX_HEADER:       \usebeamerfont{author in head/foot}\insertshortauthor
#+LATEX_HEADER:     \end{beamercolorbox}%
#+LATEX_HEADER:   \begin{beamercolorbox}[wd=.41\paperwidth,ht=2.25ex,dp=1ex,center]{title in head/foot}%
#+LATEX_HEADER:     \usebeamerfont{title in head/foot}\insertsectionhead
#+LATEX_HEADER:   \end{beamercolorbox}%
#+LATEX_HEADER:   \begin{beamercolorbox}[wd=.09\paperwidth,ht=2.25ex,dp=1ex,right]{section in head/foot}%
#+LATEX_HEADER:     \usebeamerfont{section in head/foot}\insertframenumber{}~/~\inserttotalframenumber\hspace*{2ex} 
#+LATEX_HEADER:   \end{beamercolorbox}
#+LATEX_HEADER:   }\vskip0pt}
#+LATEX_HEADER: \setbeamertemplate{footline}[info theme]
#+LATEX_HEADER: %%%%%%%%% End of Beamer Layout %%%%%%%%%%%%%
#+LATEX_HEADER: \usepackage{verbments}
#+LATEX_HEADER: \usepackage{xcolor}
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER: \usepackage{url} \urlstyle{sf}
#+LATEX_HEADER: \usepackage{appendixnumberbeamer}

#+LATEX_HEADER: \let\alert=\structure % to make sure the org * * works of tools
#+BEAMER_FRAME_LEVEL: 2

#+LATEX_HEADER: \AtBeginSection[]{\begin{frame}<beamer>\frametitle{Topic}\tableofcontents[currentsection]\end{frame}}

#+LATEX_HEADER: %\usepackage{biblatex}
# #+LATEX_HEADER: \bibliography{../../biblio.bib}
# #+LATEX_HEADER: \usepackage{cite}

#+LATEX_HEADER:   \institute{POLARIS and CORSE teams/LIG\\Under the supervision of A. LEGRAND, B. VIDEAU and F.DESPREZ}
#+LATEX_HEADER: \AtBeginSection[]{\begin{frame}<beamer>\frametitle{Topic}\tableofcontents[currentsection]\end{frame}}

#+BEGIN_LaTeX
\newcommand{\backupbegin}{
   \newcounter{finalframe}
   \setcounter{finalframe}{\value{framenumber}}
}
\newcommand{\backupend}{
   \setcounter{framenumber}{\value{finalframe}}
}
#+END_LaTeX

#+BEGIN_LaTeX
\setbeamertemplate{caption}{\raggedright\insertcaption\par}
#+END_LaTeX

* General presentation
*** Facing in increasing complexity of HPC platforms
- Scientific applications require more and more computational power \to
  Lead to make bigger and bigger High Performance Computing
  plate-forms \to more complex. 
- Taking advantage of the power of such machines is crucial but very
  complicated 
- And porting even more \to developers cannot afford to spend month in
  porting his application on a new plate-forms
*** Optimization of scientific applications
- Computation intensive \to focus on kernel optimization
- Doing it by hand \to neither scalable nor portable
- Compiler not enough
- Need code generation tools that allows the developer to write
  portable code by only describing the optimization and generate
  specialized code variants to match the underlying architecture
- Auto-tuning approach \to find which variant is the best for a given
  platform. 

*** Why is performances optimization complicated?                :noexport:
**** Structure                                                  :noexport:
- Scientific applications \to computation power hungry 
- HPC platforms \to complicated and unique machines
- They have multiple characteristics:
  - Many cores \to parallelizing efficiently is difficult
  - Different cache hierarchy \to achieving good data locality \to using
    good memory access patterns
  - Pipeline / Instruction Level Parallelism \to maximize occupancy \to
    order of the instructions
  - Vector support \to saving decoding phase
  - GPUs \to a different way of programming than CPUs
    - Different cache size and organization
    - Mapping computation suited to graphic pipeline.
  - etc, ...
The user has to: paralellize, vectorize, access data carefully, take
care about the order of the instruction, etc... \to turns out to be a really
nightmare.
- Targeting the underlying hardware = specialized code \to porting even
  more difficult

****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <1>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC1.pdf}
\end{figure}
#+END_LaTeX

****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <2>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC_v2.pdf}
\end{figure}
#+END_LaTeX

****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <3>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC_v2_1.pdf}
\end{figure}
#+END_LaTeX

****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <4>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC_v2_2.pdf}
\end{figure}
#+END_LaTeX

****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <5>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC_v2_3.pdf}
\end{figure}
#+END_LaTeX

****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <6>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC_v2_4.pdf}
\end{figure}
#+END_LaTeX

****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <7>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC_v2_4.pdf}
\end{figure}
#+END_LaTeX

#+LaTeX: \begin{overlayarea}{\linewidth}{0cm}\vspace{-7.0cm}\begin{block}{}
  - Complicated and time consuming task
  - Specialized code \to porting is even more difficult
#+LaTeX: \end{block}\end{overlayarea}

****                                                            :noexport:

*****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <7>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC7.pdf}
\end{figure}
#+END_LaTeX

*****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <8>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC8.pdf}
\end{figure}
#+END_LaTeX

*****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <10>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC9.pdf}
\end{figure}
#+END_LaTeX

#+LaTeX: \begin{overlayarea}{\linewidth}{0cm}\vspace{-7.0cm}\begin{block}{}
  - Optimization complicated \to need to be programmed with care
  - Specialized code \to target machine \to hinder portability
#+LaTeX: \end{block}\end{overlayarea}

*****  
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <9>
:END:
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.9\linewidth]{./img/HPC9.pdf}
\end{figure}
#+END_LaTeX
  
*** Code generation                                              :noexport:
Tools exist to help the developer:
  - Write relevant optimization \to generic code
  - Using parameters generate specialized variant 
**** Compilers
***** 
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <2>
:END:
- Transformation :
  - To make better use of the pipeline
  - To paralellize or vectorize 
- Limited by
  - Semantic rules
  - Lack of information at compile time, no global vision of the code
  - Choice of the transformation \to does not look for the best one but
    the one which respect the semantic
  - Still need to be programmed with care

**** Source-to-source transformation frameworks
***** 
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <3>
:END:
- Performs transformation instead of the compiler 
- Allows to specify which of transformation wanted \to e.g.,
  loop-unroll degree
- Ensures its validity 
- Yields a code that the compiler can easily work with \to less burden for
  the developer
- But generally limited:
  - To one target language \to no C to OpenCL / CUDA
  - Still limited by some semantic rules

**** Meta-programming frameworks
***** 
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <4>
:END:
- Describe computation and optimization using high level languages
- Multiple language targets (e.g., python, ruby)
- Developer has even more control on the transformation \to try
  optimization that no compiler would be able to do.
- But:
  - Can be error prone
  - Need to re-write part of the application

*** Problem analysis: Performance tuning
- *Huge search space* (e.g GCC \approx 500 compilations flags \to $2^{500}$ combinations) \to +exhaustive search+
- Auto-tuning considers this as a *mathematical optimization* problem:
  #+BEGIN_LaTeX
  \[ \displaystyle\min_{x} {f(\vec{x}): \vec{x} \in \mathcal{D} \subset \!R^{n} } \]
  #+END_LaTeX
*** Problem analysis: Objective function
   #+BEGIN_LaTeX
   \begin{figure}[!htb]
   \centering

   \begin{minipage}{.30\linewidth}
   \includegraphics[width=\linewidth]{../../Report/Project-report-template/img/convex_function.pdf}
   \end{minipage}
   \hfil
   \begin{minipage}{.30\linewidth}
   \includegraphics[width=\linewidth]{../../Report/Project-report-template/img/non_convex_function.pdf}
   \end{minipage}

   \begin{minipage}{.30\linewidth}
   \includegraphics[width=\linewidth]{../../Report/Project-report-template/img/non_smooth_function.pdf}
   \end{minipage}
   \hfil
   \begin{minipage}{.30\linewidth}
   \includegraphics[width=\linewidth]{../../Report/Project-report-template/img/auto_tuning_function.pdf}
   \end{minipage}
   \end{figure}
   #+END_LaTeX
- Empirical function \to evaluation costly
- Discrete or Continuous
- Constraints
*** Generally used methods
   # #+BEGIN_LaTeX
   # \begin{figure}[htb]
   # \centering
   # \begin{minipage}{.45\linewidth}
   # \includegraphics[width=\linewidth]{../../Report/Project-report-template/img/DoE_examples_RS.pdf}
   # \end{minipage}
   # \begin{minipage}{.45\linewidth}
   # \includegraphics[width=\linewidth]{../../Report/Project-report-template/img/DoE_examples_LHS.pdf}
   # \end{minipage}
   # \end{figure}
   # #+END_LaTeX    

- Random Search 
   #+BEGIN_LaTeX
   \only<1>{
   \begin{figure}[htb]
   \centering
   \begin{minipage}{.45\linewidth}
   \includegraphics[width=\linewidth]{../../Report/Project-report-template/img/DoE_examples_RS.pdf}
   \end{minipage}
   \end{figure}
   }
   #+END_LaTeX
- Latin Hyper Square
   #+BEGIN_LaTeX
   \only<2>{
   \begin{figure}[htb]
   \centering
   \begin{minipage}{.45\linewidth}
   \includegraphics[width=\linewidth]{../../Report/Project-report-template/img/DoE_examples_LHS.pdf}
   \end{minipage}
   \end{figure}
   }
   #+END_LaTeX
- Local search \to Greedy Search
   #+BEGIN_LaTeX
   \only<3>{
   \begin{figure}[htb]
   \centering
   \begin{minipage}{.45\linewidth}
   \includegraphics[width=\linewidth]{img/Gradient_descent.png}
   \end{minipage}
   \end{figure}
   }
   #+END_LaTeX
- Multiple local search \to Greedy Search + Restart
- Genetic Algorithms

**** 
:PROPERTIES:
:BEAMER_env: block
:BEAMER_act: <4>
:END:
- These methods are commonly used in auto-tuning
- But automatic approach \to black box \to *user excluded*
- Does not make sense because the application is *not a black box* for the user \to
  he knows how it works and thus still have a important role in the
  tuning process.

* Design and prototype of a new approach
*** Code                                                         :noexport:
#+begin_src sh :results output :exports none
  ruby ../../../scripts/format_data.rb ../../../data/2016_04_08/pilipili2/18_08_24/test_space_2016_04_02_end_cleaned.yaml 
#+end_src

#+RESULTS:

#+begin_src R :results output graphics :file ./img/combinations_index.pdf :exports none :width 6 :height 4 :session
  df <- read.csv("/tmp/test.csv", strip.white=T, header=T)
  library(ggplot2)
  ggplot(df) +
      aes(x=seq(1,nrow(df)), y=time_per_pixel) +
      geom_point(alpha=0.5) +
      labs(x="Combination indexes", y="Time per pixel in s")
#+end_src

#+RESULTS:
[[file:./img/combinations_index.pdf]]

#+begin_src R :results output graphics :file ./img/combinations_sorted.pdf :exports none :width 6 :height 4 :session
  library(ggplot2)
  df <- read.csv("/tmp/test.csv", strip.white=T, header=T)
  df1 <- df[order(df$vector_length, df$lws_y, df$threads_number, df$y_component_number, df$elements_number, df$temporary_size, df$load_overlap),]         
  ggplot(df1) +
      aes(x=seq(1,nrow(df1)), y=time_per_pixel) +
      #aes(x=seq(1,nrow(df1)), y=time_per_pixel, shape=factor(vector_length), color=lws_y) +
      geom_point(alpha=0.5) +
      labs(x="Combination indexes", y="Time per pixel in s")
#+end_src

#+RESULTS:
[[file:./img/combinations_sorted.pdf]]
*** Our goal
- Involve the user in the optimization process
  - give him valuable feedback
  - guide him and allow him to guide the tuning process
- Based on:
  - Design of experiments \to investigate the search at a minimal
    experimental cost
  - Linear regression (least square and quantile regression)  \to to
    interpret information to make appear the structure of the search
    space and to predict the best combinations of parameters
*** Semi-automatic performance tuning
1. *Sampling* the search space according to the user's needs
2. Apply linear regression:
   - To find relevant parameters and *remove useless ones* with using
      a simple model
   - To refine the model by *checking hypothesis*
   - Keep the model *as simple as possible*
   - If not satisfied \to additional points needed \to back to 1
3. Instantiate the model to predict best values of significant
   parameters only
4. Prune the search space \to by fixing these parameters
5. Re-inject unused parameters
6. Back to 1 until all parameters are estimated


# #+BEGIN_LaTeX
# \begin{figure}[tbh]
# \centering
# \includegraphics[width=.8\linewidth]{../../Report/Project-report-template/img/process.pdf}
# \end{figure}
# #+END_LaTeX
* Methodology
*** Reproducible research
- Publicly available on Github!
- Laboratory book:
  - Code, experiments, and detailed analysis
  - Literate programming, emacs org-mode, Ruby and R
  - *33K lines* including 17K lines which are code and analysis
- All experiments are logged and also available
*** BOAST
  - A ruby meta-programming framework
  - C, Fortran, CUDA, OpenCL
  - Complete tool chain: 
    - Code generation
    - Verification 
    - Compilation 
    - Benchmark
*** Case study: A Laplacian kernel
- Time to compute a pixel
- Kernel parameters:
     | Parameters         | Values                            |
     |--------------------+-----------------------------------|
     | /                  | <                                 |
     | /vector_length/      | 1,2,4,8,16                        |
     | /load_overlap/       | true,false                        |
     | /temporary_size/     | 2,4                               |
     | /elements_number/    | from 1 to 24                      |
     | /y_component_number/ | from 1 to 6                       |
     | /threads_number/     | 32,64,128,256,512,1024            |
     | /local_work_size_y/  | 1,2,4,8,16,32,64,128,256,512,1024 |

- 190080 variants \to 23120 due to constraints \approx 6.7 days
- GPU Nvidia K40c and OpenCL 
* Experiment and analysis
*** Code                                                         :noexport:
**** Results
#+begin_src sh :results output :exports none
  ruby ../../../scripts/format_data.rb ../../../data/2016_04_08/pilipili2/18_08_24/test_space_2016_04_02_end_cleaned.yaml 
#+end_src

#+RESULTS:

#+begin_src R :results output graphics :file ./img/results_hist.pdf :exports none :width 8 :height 8 :session
  df_all_methods <- read.csv("../../../data/2016_04_08/pilipili2/18_08_24/all_search_1000.csv", strip.white=T, header=T)  
  library(ggplot2)
  library(plyr)

  df_all_methods$method <- factor(df_all_methods$method, levels = c("RS","LHS","GS","GSR","GA","LM","RQ"))

  df_mean = ddply(df_all_methods,.(method), summarize, 
                  mean = mean(slowdown))

  df_median = ddply(df_all_methods,.(method), summarize, 
                    median = median(slowdown))

  df_err = ddply(df_all_methods,.(method), summarize,
                 mean = mean(slowdown), err = 2*sd(slowdown)/sqrt(length(slowdown)))

  df_max = ddply(df_all_methods,.(method), summarize, max = max(slowdown))

  ggplot(df_all_methods ) + 
      facet_grid(method~.) +
      theme_bw() +
      coord_cartesian(xlim=c(.9,4), ylim=c(0,1000)) +
      geom_histogram(aes(slowdown),binwidth=.05, fill="gray48") +
      geom_curve(data=df_max, aes(x=max+.1, y=500, xend=max, yend=5), arrow = arrow(length = unit(0.05, "npc")), curvature=0.3) +
      geom_text( aes(x=max+.2,y=550,label="max"),data=df_max ) +
      geom_rect(data = df_err, aes(xmin=mean-err, xmax=mean+err, ymin=0, ymax=1000, fill="red"), alpha=0.3) +
      geom_vline( aes(xintercept = median), df_median, color="darkgreen", linetype=3 ) +
      geom_vline( aes(xintercept = mean), df_mean, color="red", linetype=2 ) +
      labs(y="Frequency", x="Slowdown compared to the optimal solution") +
      scale_fill_discrete(name="",breaks=c("red"), labels=c("Mean\nerror")) +
      ggtitle("") + 
      theme(legend.position="right")
#+end_src

#+RESULTS:
[[file:./img/results_hist.pdf]]

 
*** Protocol
- Methods: RS, LHS, GS, GSR, GA, LM and RQ
- Maximal budget: 120
- GA \to population size = 20, mutation rate = 0.1
- 1000 runs
- Automatization of LM and RQ \to using same strategy each time
*** Results
#+BEGIN_LaTeX
\begin{figure}[t]
\centering
\includegraphics[width=.8\linewidth]{./img/results_hist.pdf}
\end{figure}
#+END_LaTeX

*** Characteristics of the search space: Distribution of combinations
#+BEGIN_LaTeX
\begin{figure}[htb]
\centering
\begin{minipage}{.35\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/search_combination_rep_slowdown.pdf}
\end{minipage}
\hfil
\begin{minipage}{.35\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/search_combination_rep_slowdown_zoom.pdf}
\end{minipage}
\end{figure}
#+END_LaTeX   

#+BEGIN_LaTeX
\tiny
#+END_LaTeX

| Min  | 1st Q. | Median | Mean   | 3rd Q. |     Max |
|------+--------+--------+--------+--------+---------|
| /    | <>     | <>     | <>     | <>     |         |
| 1.00 | 2.599  | 6.116  | 17.276 | 17.177 | 382.168 |

#+BEGIN_LaTeX
\normalsize
#+END_LaTeX
**** 
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <2>
:END:
#+LaTeX: \begin{overlayarea}{\linewidth}{0cm}\vspace{-6.0cm}\begin{block}{}
- Lots a of good combinations parameters
- 312 random points = 90% of chance to get a slowdown lower than 1.1
#+LaTeX: \end{block}\end{overlayarea}
*** Characteristics of the search space: Structured              :noexport:
# That is why our approach worked
#+BEGIN_LaTeX
\begin{figure}[htb]
\centering
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/heteroscedasticity_v_len.pdf}
\end{minipage}
\hfill
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/heteroscedasticity_x_comp.pdf}
\end{minipage}
\end{figure}
#+END_LaTeX   
*** Least square regression: Estimation of  general tendency     :noexport:
#+BEGIN_LaTeX
\begin{figure}[htb]
\centering
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/lm_v_len.pdf}
\end{minipage}
\hfill
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/lm_x_comp.pdf}
\end{minipage}
\end{figure}
#+END_LaTeX
**** 
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <2>
:END:
#+LaTeX: \begin{overlayarea}{\linewidth}{0cm}\vspace{-5.0cm}\begin{block}{}
But does not respect classic least square regression main assumption:
- Same variance
#+LaTeX: \end{block}\end{overlayarea}
*** Least square regression vs quantile regression
#+BEGIN_LaTeX
\begin{figure}[htb]
\centering
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/why_we_choose_quantile_reg_v_len.pdf}
\end{minipage}
\hfill
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/why_we_choose_quantile_reg_x_comp.pdf}
\end{minipage}
\end{figure}
#+END_LaTeX
**** 
# :PROPERTIES:
# :BEAMER_env: onlyenv
# :BEAMER_act: <2>
# :END:
# #+LaTeX: %\begin{overlayarea}{\linewidth}{0cm}\vspace{-5.0cm}\begin{block}{}
But does not respect classic least square regression main assumption:
- Same variance
# #+LaTeX: §\end{block}\end{overlayarea}
*** Characteristics of the search space: Top-20 of the best combinations
#+BEGIN_LaTeX
\tiny
#+END_LaTeX
  | elements | y component | vector | temporary | load    | threads | lws_y | slowdown |
  | number   | number      | length | size      | overlap | number  |       |          |
  | <c>      | <c>         | <c>    | <c>       | <c>     | <c>     | <c>   | <c>      |
  | /        | <>          | <>     | <>        | <>      | <>      | <>    |          |
  |----------+-------------+--------+-----------+---------+---------+-------+----------|
  | 6        | 6           | 1      | 2         | true    | 1024    | 2     | 1.000000 |
  | 6        | 6           | 1      | 2         | false   | 256     | 4     | 1.005562 |
  | 5        | 5           | 1      | 2         | true    | 256     | 4     | 1.007540 |
  | 5        | 5           | 1      | 2         | false   | 256     | 4     | 1.009100 |
  | 6        | 6           | 1      | 2         | false   | 1024    | 8     | 1.009796 |
  | 6        | 6           | 1      | 2         | false   | 128     | 4     | 1.010568 |
  | 6        | 6           | 1      | 2         | true    | 1024    | 4     | 1.011509 |
  | 5        | 5           | 1      | 2         | false   | 512     | 4     | 1.011710 |
  | \to *6*      | *6*           | *1*      | *2*         | *true*    | *256*     | *1*     | *1.012177* |
  | 6        | 6           | 1      | 2         | false   | 128     | 2     | 1.012663 |
  | 6        | 6           | 1      | 2         | true    | 128     | 2     | 1.013555 |
  | 6        | 6           | 1      | 2         | true    | 256     | 2     | 1.013578 |
  | 5        | 5           | 1      | 2         | true    | 512     | 4     | 1.013662 |
  | 6        | 6           | 1      | 4         | false   | 1024    | 4     | 1.013695 |
  | 6        | 6           | 1      | 4         | true    | 512     | 8     | 1.014100 |
  | 6        | 6           | 1      | 4         | true    | 1024    | 4     | 1.014177 |
  | 6        | 6           | 1      | 2         | false   | 256     | 1     | 1.014598 |
  | 6        | 6           | 1      | 2         | true    | 1024    | 8     | 1.014882 |
  | 6        | 6           | 1      | 2         | true    | 128     | 1     | 1.015087 |
  | 6        | 6           | 1      | 2         | true    | 512     | 8     | 1.015301 |
#+BEGIN_LaTeX
\normalsize
#+END_LaTeX
**** 
# :PROPERTIES:
# :BEAMER_env: onlyenv
# :BEAMER_act: <2>
# :END:
# #+LaTeX: \begin{overlayarea}{\linewidth}{0cm}\vspace{-3.0cm}\begin{block}{}
- Localized but still several local optimum!
- Failed to get better /lws_y/ because of the model \to /vector_length/ +
  /lws_y/
# #+LaTeX: \end{block}\end{overlayarea}

*** LM: Success and "failures" - $R^{2}$, std. err. and p-values
**** Best solution
#+BEGIN_LaTeX
  \tiny
  #+END_LaTeX
  | elements | y component | vector | temporary | load    | threads | lws y | slowdown |
  | number   | number      | length | size      | overlap | number  |       |          |
  | <c>      | <c>         | <c>    | <c>       | <c>     | <c>     | <c>   | <c>      |
  |----------+-------------+--------+-----------+---------+---------+-------+----------|
  | /        | <>          | <>     | <>        | <>      | <>      | <>    | <        |
  | 6        | 6           | 1      | 2         | true    | 256     | 1     | 1.012177 |
  #+BEGIN_LaTeX
  \scriptsize
  #+END_LaTeX
  Coefficient of determination = 0.5431
  #+BEGIN_LaTeX
  \tiny
  #+END_LaTeX
    |               |      Coef | Std. err. | p-values       |
    |---------------+-----------+-----------+----------------|
    | /             |        <> |        <> | <              |
    | vector length | 8.794e-11 | 3.025e-11 | 0.00555 $**$   |
    | lws y         | 1.987e-11 | 2.882e-12 | 1.18e-08 $***$ |
  #+BEGIN_LaTeX
  \scriptsize
  #+END_LaTeX
# - Lucky case: Coefficient of determination = 0.1665
#    #+BEGIN_LaTeX
#    \tiny
#    #+END_LaTeX
#      |               |      Coef | Std. err. | p-values     |
#      |---------------+-----------+-----------+--------------|
#      | /             |        <> |        <> | <            |
#      | vector_length | 1.438e-10 | 8.941e-11 | 0.11453      |
#      | lws y         | 1.507e-11 | 4.596e-12 | 0.00197 $**$ |

  #+BEGIN_LaTeX
  \normalsize
  #+END_LaTeX
**** Worst Solution
  #+BEGIN_LaTeX
  \tiny
  #+END_LaTeX
  | elements | y component | vector | temporary | load    | threads | lws y | slowdown |
  | number   | number      | length | size      | overlap | number  |       |          |
  | <c>      | <c>         | <c>    | <c>       | <c>     | <c>     | <c>   | <c>      |
  |----------+-------------+--------+-----------+---------+---------+-------+----------|
  | /        | <>          | <>     | <>        | <>      | <>      | <>    | <        |
  | 24       | 6           | 16     | 2         | false   | 64      | 1     | 3.771183 |

#+BEGIN_LaTeX
  \scriptsize
  #+END_LaTeX
Coefficient of determination = 0.1744
#+BEGIN_LaTeX
  \tiny
  #+END_LaTeX

  |               |       Coef | Std. err. | p-values     |
  |---------------+------------+-----------+--------------|
  | /             |         <> |        <> | <            |
  | vector_length | -2.316e-11 | 5.953e-11 | 0.69904      |
  | lws y         |  5.572e-12 | 1.625e-12 | 0.00127 $**$ |

  #+BEGIN_LaTeX
  \normalsize
  #+END_LaTeX
*** LM: Success and "failures" - Predictions vs observations
#+BEGIN_LaTeX
\begin{figure}[htb]
\centering
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/good_prediction.pdf}
\caption{Favorable}
\end{minipage}
\hfil
% \begin{minipage}{.30\linewidth}
% \includegraphics[width=\linewidth]{../../Report/Project-report-template/img/lucky_prediction.pdf}
% \caption{Lucky}
% \end{minipage}
% \hfil
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/bad_prediction.pdf}
\caption{Worst}
\end{minipage}
\end{figure}
#+END_LaTeX
* Conclusion
*** Summary
- We designed a new approach that put the user in the core of the
  optimization process
- Comparison against techniques commonly used in the auto-tuning
  literature
- In depth study of the results:
  - Reasons why it works
  - Why quantile regression makes more sense than least square
    regression
*** Future work
- Try more complex cases
- Compute correctly standard error, p-values and coefficient of
  determinations for quantile regression
- Dig into sampling strategies to reduce even more the number of points.
*** This is the end
Thanks for your attention.
* 
#+BEGIN_LaTeX
\appendix
#+END_LaTeX
* Technical difficulties
** Constrained  and discrete search space
*** Model optimization
#+BEGIN_LaTeX
\begin{figure}[htb]
\centering
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/search_space_3D.pdf}
\end{minipage}
\hfill
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/search_space_3D_constrained_ugly.pdf}
\end{minipage}
\end{figure}
#+END_LaTeX
*** Model optimization
#+BEGIN_LaTeX
\begin{figure}[htb]
\centering
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/search_space_3D_constrained.pdf}
\end{minipage}
\hfill
\begin{minipage}{.45\linewidth}
\includegraphics[width=\linewidth]{../../Report/Project-report-template/img/search_space_3D_barrier.pdf}
\end{minipage}
\end{figure}
#+END_LaTeX
*** Sampling techniques: Screening design
*** Sampling techniques: LHS
** Quantile regression
*** Quantile regression
* Code generation and optimization opportunities
*** Code generation and optimization opportunities
Tools exist to help the developer:
  - Write relevant optimization \to generic code
  - Using parameters generate specialized variant 
**** Compilers
***** 
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <2>
:END:
- Transformation :
  - To make better use of the pipeline
  - To paralellize or vectorize 
- Limited by
  - Semantic rules
  - Lack of information at compile time, no global vision of the code
  - Choice of the transformation \to does not look for the best one but
    the one which respect the semantic
  - Still need to be programmed with care

**** Source-to-source transformation frameworks
***** 
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <3>
:END:
- Performs transformation instead of the compiler 
- Allows to specify which of transformation wanted \to e.g.,
  loop-unroll degree
- Ensures its validity 
- Yields a code that the compiler can easily work with \to less burden for
  the developer
- But generally limited:
  - To one target language \to no C to OpenCL / CUDA
  - Still limited by some semantic rules

**** Meta-programming frameworks
***** 
:PROPERTIES:
:BEAMER_env: onlyenv
:BEAMER_act: <4>
:END:
- Describe computation and optimization using high level languages
- Multiple language targets (e.g., python, ruby)
- Developer has even more control on the transformation \to try
  optimization that no compiler would be able to do.
- But:
  - Can be error prone
  - Need to re-write part of the application

* LM: Improving worst case
* Controlling measurements: Warm-up effect
*** Controlling measurements: Warm-up effect
#+BEGIN_LaTeX
\begin{figure}[htb]
\centering
\includegraphics[height=.8\textheight]{../../Report/Project-report-template/img/warm_up.pdf}
\end{figure}
#+END_LaTeX
* A structured problem
*** Finding the structure of the problem
#+BEGIN_LaTeX
\begin{figure}[]
\centering
\includegraphics[width=\linewidth]{./img/combinations_index.pdf}
\end{figure}
#+END_LaTeX
*** Ordered by factor significance
#+BEGIN_LaTeX
\begin{figure}[]
\centering
\includegraphics[width=\linewidth]{./img/combinations_sorted.pdf}
\end{figure}
#+END_LaTeX
* Emacs Setup 							   :noexport:
  This document has local variables in its postembule, which should
  allow Org-mode to work seamlessly without any setup. If you're
  uncomfortable using such variables, you can safely ignore them at
  startup. Exporting may require that you copy them in your .emacs.

# Local Variables:
# eval:    (require 'org-install)
# eval:    (org-babel-do-load-languages 'org-babel-load-languages '( (sh . t) (R . t) (perl . t) (ditaa . t) ))
# eval:    (setq org-confirm-babel-evaluate nil)
# eval:    (unless (boundp 'org-latex-classes) (setq org-latex-classes nil))
# eval:    (setq org-alphabetical-lists t)
# eval:    (setq org-src-fontify-natively t)
# eval:   (setq org-export-babel-evaluate nil)
# eval:   (setq ispell-local-dictionary "english")
# eval:   (eval (flyspell-mode t))
# eval:    (setq org-latex-listings 'minted)
# eval:    (setq org-latex-minted-options '(("bgcolor" "white") ("style" "tango") ("numbers" "left") ("numbersep" "5pt")))
# eval:   (add-to-list 'org-beamer-environments-extra '("onlyenv" "O" "\\begin{onlyenv}%a" "\\end{onlyenv}"))
# End:
